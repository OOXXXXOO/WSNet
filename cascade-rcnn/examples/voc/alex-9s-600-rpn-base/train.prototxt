name: "AlexNet"
layer {
  name: "data"
  type: "DetectionData"
  top: "data"
  top: "label_1_176x88"
  top: "label_2_88x176"
  top: "label_3_128x128"
  top: "label_4_352x176"
  top: "label_5_176x352"
  top: "label_6_256x256"
  top: "label_7_704x352"
  top: "label_8_352x704"
  top: "label_9_512x512"
  top: "gt_boxes"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  detection_data_param {
    root_folder: "/your/path/to/VOCdevkit/"
    source: "../../../data/voc/window_file_voc0712_trainval.txt"
    batch_size: 4
    short_size: 600
    long_size: 1000
    stride: 16
    stride: 16
    stride: 16
    stride: 16
    stride: 16
    stride: 16
    stride: 16
    stride: 16
    stride: 16
    field_w: 176
    field_w: 88
    field_w: 128
    field_w: 352
    field_w: 176
    field_w: 256
    field_w: 704
    field_w: 352
    field_w: 512
    field_h: 88
    field_h: 176
    field_h: 128
    field_h: 176
    field_h: 352
    field_h: 256
    field_h: 352
    field_h: 704
    field_h: 512
    fg_threshold: 0.7
    ignore_fg_threshold: 0.4
    shuffle: "random_aspect"
    output_gt_boxes: true
    distort_param {
      brightness_prob: 0.5
      brightness_delta: 32
      contrast_prob: 0.5
      contrast_lower: 0.5
      contrast_upper: 1.5
      hue_prob: 0.5
      hue_delta: 18
      saturation_prob: 0.5
      saturation_lower: 0.5
      saturation_upper: 1.5
      random_order_prob: 0.0
    }
  }
}
layer {
  name: "label_group"
  type: "Concat"
  bottom: "label_1_176x88"
  bottom: "label_2_88x176"
  bottom: "label_3_128x128"
  bottom: "label_4_352x176"
  bottom: "label_5_176x352"
  bottom: "label_6_256x256"
  bottom: "label_7_704x352"
  bottom: "label_8_352x704"
  bottom: "label_9_512x512"
  top: "label_group"
  concat_param {
    axis: 1
  }
}
layer {
  name: "label_group_reshape"
  bottom: "label_group"
  top: "label_group_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 6 dim: 0 dim: 0 } 
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    pad: 5
    stride: 4
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

#========================== rpn ===============================
layer {
  name: "rpn_conv"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu"
  type: "ReLU"
  bottom: "rpn_conv"
  top: "rpn_conv"
}
layer {
  name: "rpn_cls"
  type: "Convolution"
  bottom: "rpn_conv"
  top: "rpn_cls"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_cls_reshape"
  bottom: "rpn_cls"
  top: "rpn_cls_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 2 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_bbox"
  type: "Convolution"
  bottom: "rpn_conv"
  top: "rpn_bbox"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_bbox_reshape"
  bottom: "rpn_bbox"
  top: "rpn_bbox_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 4 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_loss"
  type: "DetectionGroupLoss"
  bottom: "rpn_cls_reshape"
  bottom: "rpn_bbox_reshape"
  bottom: "label_group_reshape"
  top: "rpn_loss"
  detection_group_loss_param {
    batch_size: 256
    cls_num: 2
    lambda: 1
    field_w: 176
    field_w: 88
    field_w: 128
    field_w: 352
    field_w: 176
    field_w: 256
    field_w: 704
    field_w: 352
    field_w: 512
    field_h: 88
    field_h: 176
    field_h: 128
    field_h: 176
    field_h: 352
    field_h: 256
    field_h: 352
    field_h: 704
    field_h: 512
    stride: 16
    field_whr: 8
    field_xyr: 1
    bg_threshold: 0.3
    bg_multiple: 1
    neg_mining_type: "random"
    objectness: true
    pos_neg_weighted: false
    bbox_loss_type: "Smooth_L1"
  }
  loss_weight: 1.0
}
layer {
  name: "rpn_accuracy"
  type: "DetectionGroupAccuracy"
  bottom: "rpn_cls_reshape"
  bottom: "rpn_bbox_reshape"
  bottom: "label_group_reshape"
  top: "rpn_accuracy"
  top: "rpn_bboxiou"
  detection_group_accuracy_param {
    cls_num: 2
    field_w: 176
    field_w: 88
    field_w: 128
    field_w: 352
    field_w: 176
    field_w: 256
    field_w: 704
    field_w: 352
    field_w: 512
    field_h: 88
    field_h: 176
    field_h: 128
    field_h: 176
    field_h: 352
    field_h: 256
    field_h: 352
    field_h: 704
    field_h: 512
    stride: 16
    field_whr: 8
    field_xyr: 1
    objectness: true
  }
}

#=================== proposal ======================
layer {
  name: "rpn_prob_reshape"
  type: "Softmax"
  bottom: "rpn_cls_reshape"
  top: "rpn_prob_reshape"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "proposals"
  type: "BoxGroupOutput"
  bottom: "rpn_prob_reshape"
  bottom: "rpn_bbox_reshape"
  top: "proposals"
  box_group_output_param {
    fg_thr: 0.01
    iou_thr: 0.7
    nms_type: "IOU"
    box_group_param {
      field_w: 176
      field_w: 88
      field_w: 128
      field_w: 352
      field_w: 176
      field_w: 256
      field_w: 704
      field_w: 352
      field_w: 512
      field_h: 88
      field_h: 176
      field_h: 128
      field_h: 176
      field_h: 352
      field_h: 256
      field_h: 352
      field_h: 704
      field_h: 512
      stride: 16
    }
    field_whr: 8
    field_xyr: 1
    max_nms_num: 3000
  }
  propagate_down: 0
  propagate_down: 0
}
#=================== data prepare for frcnn ======================
layer {
  name: "proposal_info"
  type: "ProposalTarget"
  bottom: "proposals"
  bottom: "gt_boxes"
  top: "rois"
  top: "proposal_labels"
  top: "proposal_targets"
  top: "box_inside_weights"
  top: "box_outside_weights"
  top: "match_gt_boxes"
  include {
    phase: TRAIN
  }
  proposal_target_param {
    cls_num: 21
    batch_size: 512
    fg_fraction: 0.25
    num_img_per_batch: 4
    fg_thr: 0.5
    bg_thr_hg: 0.5
    bg_thr_lw: 0.0
    img_width: 600
    img_height: 600
  }
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.1 bbox_std: 0.1 bbox_std: 0.2 bbox_std: 0.2
  }
  propagate_down: 0
  propagate_down: 0
}
#=================== RCNN ======================
layer {
  name: "roi_pool"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool"
  roi_pooling_param {
    pooled_w: 6
    pooled_h: 6
    spatial_scale: 0.0625 # 1/16
    pad_ratio: 0
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_pred"
  bottom: "proposal_labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "cls_accuracy"
  type: "Accuracy"
  bottom: "cls_pred"
  bottom: "proposal_labels"
  top: "cls_accuracy"
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "proposal_targets"
  bottom: "box_inside_weights"
  bottom: "box_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "bbox_iou"
  type: "BboxAccuracy"
  bottom: "bbox_pred"
  bottom: "rois"
  bottom: "match_gt_boxes"
  top: "bbox_iou"
  top: "bbox_iou_pre"
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.1 bbox_std: 0.1 bbox_std: 0.2 bbox_std: 0.2
  }
}
