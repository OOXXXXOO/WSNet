name: "ResNet-50"
layer {
  top: "data"
  top: "label_01_44x22"
  top: "label_02_22x44"
  top: "label_03_32x32"
  top: "label_04_88x44"
  top: "label_05_44x88"
  top: "label_06_64x64"
  top: "label_07_176x88"
  top: "label_08_88x176"
  top: "label_09_128x128"
  top: "label_10_352x176"
  top: "label_11_176x352"
  top: "label_12_256x256"
  top: "label_13_704x352"
  top: "label_14_352x704"
  top: "label_15_512x512"
  top: "gt_boxes"
  name: "data"
  type: "DetectionData"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  detection_data_param {
    root_folder: "/your/path/to/coco/images/"
    source: "../../../data/coco/window_file_coco_train2017.txt"
    batch_size: 1
    short_size: 800
    long_size: 1312
    min_gt_width: 5
    min_gt_height: 5
    stride: 4 stride: 4 stride: 4 stride: 8 stride: 8
    stride: 8 stride: 16 stride: 16 stride: 16 stride: 32
    stride: 32 stride: 32 stride: 32 stride: 32 stride: 32
    field_w: 44 field_w: 22 field_w: 32 field_w: 88 field_w: 44
    field_w: 64 field_w: 176 field_w: 88 field_w: 128 field_w: 352
    field_w: 176 field_w: 256 field_w: 704 field_w: 352 field_w: 512
    field_h: 22 field_h: 44 field_h: 32 field_h: 44 field_h: 88 
    field_h: 64 field_h: 88 field_h: 176 field_h: 128 field_h: 176
    field_h: 352 field_h: 256 field_h: 352 field_h: 704 field_h: 512
    fg_threshold: 0.7
    ignore_fg_threshold: 0.4
    anchor_ignore_margin_ratio: 0.5
    shuffle: "random_aspect"
    output_gt_boxes: true
    distort_param {
      brightness_prob: 0.5
      brightness_delta: 32
      contrast_prob: 0.5
      contrast_lower: 0.5
      contrast_upper: 1.5
      hue_prob: 0.5
      hue_delta: 18
      saturation_prob: 0.5
      saturation_lower: 0.5
      saturation_upper: 1.5
      random_order_prob: 0.0
    }
  }
}
layer {
  name: "label_fpn2"
  type: "Concat"
  bottom: "label_01_44x22"
  bottom: "label_02_22x44"
  bottom: "label_03_32x32"
  top: "label_fpn2"
  concat_param {
    axis: 1
  }
}
layer {
  name: "label_fpn2_reshape"
  bottom: "label_fpn2"
  top: "label_fpn2_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 6 dim: 0 dim: 0 } 
  }
}
layer {
  name: "label_fpn3"
  type: "Concat"
  bottom: "label_04_88x44"
  bottom: "label_05_44x88"
  bottom: "label_06_64x64"
  top: "label_fpn3"
  concat_param {
    axis: 1
  }
}
layer {
  name: "label_fpn3_reshape"
  bottom: "label_fpn3"
  top: "label_fpn3_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 6 dim: 0 dim: 0 } 
  }
}
layer {
  name: "label_fpn4"
  type: "Concat"
  bottom: "label_07_176x88"
  bottom: "label_08_88x176"
  bottom: "label_09_128x128"
  top: "label_fpn4"
  concat_param {
    axis: 1
  }
}
layer {
  name: "label_fpn4_reshape"
  bottom: "label_fpn4"
  top: "label_fpn4_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 6 dim: 0 dim: 0 } 
  }
}
layer {
  name: "label_fpn5"
  type: "Concat"
  bottom: "label_10_352x176"
  bottom: "label_11_176x352"
  bottom: "label_12_256x256"
  bottom: "label_13_704x352"
  bottom: "label_14_352x704"
  bottom: "label_15_512x512"
  top: "label_fpn5"
  concat_param {
    axis: 1
  }
}
layer {
  name: "label_fpn5_reshape"
  bottom: "label_fpn5"
  top: "label_fpn5_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 6 dim: 0 dim: 0 } 
  }
}
# ------------------------ conv1 -----------------------------
layer {
    bottom: "data"
    top: "conv1"
    name: "conv1"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 7
        pad: 3
        stride: 2
    }
    param {
        lr_mult: 0.0
    }
    param {
        lr_mult: 0.0
    }
    
}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "scale_conv1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "conv1_relu"
    type: "ReLU"
}

layer {
    bottom: "conv1"
    top: "pool1"
    name: "pool1"
    type: "Pooling"
    pooling_param {
        kernel_size: 3
        stride: 2
        pool: MAX
    }
}

layer {
    bottom: "pool1"
    top: "res2a_branch1"
    name: "res2a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2a_branch1"
    top: "res2a_branch1"
    name: "scale2a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "pool1"
    top: "res2a_branch2a"
    name: "res2a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2a"
    name: "scale2a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2a"
    name: "res2a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2b"
    name: "res2a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2a_branch2b"
    top: "res2a_branch2b"
    name: "scale2a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2a_branch2b"
    top: "res2a_branch2b"
    name: "res2a_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a_branch2b"
    top: "res2a_branch2c"
    name: "res2a_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2a_branch2c"
    top: "res2a_branch2c"
    name: "scale2a_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2a_branch1"
    bottom: "res2a_branch2c"
    top: "res2a"
    name: "res2a"
    type: "Eltwise"
}

layer {
    bottom: "res2a"
    top: "res2a"
    name: "res2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a"
    top: "res2b_branch2a"
    name: "res2b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2a"
    name: "scale2b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2a"
    name: "res2b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2b"
    name: "res2b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2b_branch2b"
    top: "res2b_branch2b"
    name: "scale2b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2b_branch2b"
    top: "res2b_branch2b"
    name: "res2b_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b_branch2b"
    top: "res2b_branch2c"
    name: "res2b_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2b_branch2c"
    top: "res2b_branch2c"
    name: "scale2b_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2a"
    bottom: "res2b_branch2c"
    top: "res2b"
    name: "res2b"
    type: "Eltwise"
}

layer {
    bottom: "res2b"
    top: "res2b"
    name: "res2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b"
    top: "res2c_branch2a"
    name: "res2c_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2c_branch2a"
    top: "res2c_branch2a"
    name: "scale2c_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2c_branch2a"
    top: "res2c_branch2a"
    name: "res2c_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2c_branch2a"
    top: "res2c_branch2b"
    name: "res2c_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2c_branch2b"
    top: "res2c_branch2b"
    name: "scale2c_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2c_branch2b"
    top: "res2c_branch2b"
    name: "res2c_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2c_branch2b"
    top: "res2c_branch2c"
    name: "res2c_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 0.0
    }
}

layer {
    bottom: "res2c_branch2c"
    top: "res2c_branch2c"
    name: "scale2c_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2b"
    bottom: "res2c_branch2c"
    top: "res2c"
    name: "res2c"
    type: "Eltwise"
}

layer {
    bottom: "res2c"
    top: "res2c"
    name: "res2c_relu"
    type: "ReLU"
}

layer {
    bottom: "res2c"
    top: "res3a_branch1"
    name: "res3a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3a_branch1"
    top: "res3a_branch1"
    name: "scale3a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res2c"
    top: "res3a_branch2a"
    name: "res3a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2a"
    name: "scale3a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2a"
    name: "res3a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2b"
    name: "res3a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3a_branch2b"
    top: "res3a_branch2b"
    name: "scale3a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3a_branch2b"
    top: "res3a_branch2b"
    name: "res3a_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a_branch2b"
    top: "res3a_branch2c"
    name: "res3a_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3a_branch2c"
    top: "res3a_branch2c"
    name: "scale3a_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3a_branch1"
    bottom: "res3a_branch2c"
    top: "res3a"
    name: "res3a"
    type: "Eltwise"
}

layer {
    bottom: "res3a"
    top: "res3a"
    name: "res3a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a"
    top: "res3b_branch2a"
    name: "res3b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3b_branch2a"
    top: "res3b_branch2a"
    name: "scale3b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3b_branch2a"
    top: "res3b_branch2a"
    name: "res3b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b_branch2a"
    top: "res3b_branch2b"
    name: "res3b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3b_branch2b"
    top: "res3b_branch2b"
    name: "scale3b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3b_branch2b"
    top: "res3b_branch2b"
    name: "res3b_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b_branch2b"
    top: "res3b_branch2c"
    name: "res3b_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3b_branch2c"
    top: "res3b_branch2c"
    name: "scale3b_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3a"
    bottom: "res3b_branch2c"
    top: "res3b"
    name: "res3b"
    type: "Eltwise"
}

layer {
    bottom: "res3b"
    top: "res3b"
    name: "res3b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b"
    top: "res3c_branch2a"
    name: "res3c_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3c_branch2a"
    top: "res3c_branch2a"
    name: "scale3c_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3c_branch2a"
    top: "res3c_branch2a"
    name: "res3c_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3c_branch2a"
    top: "res3c_branch2b"
    name: "res3c_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3c_branch2b"
    top: "res3c_branch2b"
    name: "scale3c_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3c_branch2b"
    top: "res3c_branch2b"
    name: "res3c_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3c_branch2b"
    top: "res3c_branch2c"
    name: "res3c_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3c_branch2c"
    top: "res3c_branch2c"
    name: "scale3c_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3b"
    bottom: "res3c_branch2c"
    top: "res3c"
    name: "res3c"
    type: "Eltwise"
}

layer {
    bottom: "res3c"
    top: "res3c"
    name: "res3c_relu"
    type: "ReLU"
}

layer {
    bottom: "res3c"
    top: "res3d_branch2a"
    name: "res3d_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3d_branch2a"
    top: "res3d_branch2a"
    name: "scale3d_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3d_branch2a"
    top: "res3d_branch2a"
    name: "res3d_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3d_branch2a"
    top: "res3d_branch2b"
    name: "res3d_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3d_branch2b"
    top: "res3d_branch2b"
    name: "scale3d_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3d_branch2b"
    top: "res3d_branch2b"
    name: "res3d_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3d_branch2b"
    top: "res3d_branch2c"
    name: "res3d_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res3d_branch2c"
    top: "res3d_branch2c"
    name: "scale3d_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3c"
    bottom: "res3d_branch2c"
    top: "res3d"
    name: "res3d"
    type: "Eltwise"
}

layer {
    bottom: "res3d"
    top: "res3d"
    name: "res3d_relu"
    type: "ReLU"
}

layer {
    bottom: "res3d"
    top: "res4a_branch1"
    name: "res4a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4a_branch1"
    top: "res4a_branch1"
    name: "scale4a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res3d"
    top: "res4a_branch2a"
    name: "res4a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4a_branch2a"
    top: "res4a_branch2a"
    name: "scale4a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4a_branch2a"
    top: "res4a_branch2a"
    name: "res4a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4a_branch2a"
    top: "res4a_branch2b"
    name: "res4a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4a_branch2b"
    top: "res4a_branch2b"
    name: "scale4a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4a_branch2b"
    top: "res4a_branch2b"
    name: "res4a_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4a_branch2b"
    top: "res4a_branch2c"
    name: "res4a_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4a_branch2c"
    top: "res4a_branch2c"
    name: "scale4a_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4a_branch1"
    bottom: "res4a_branch2c"
    top: "res4a"
    name: "res4a"
    type: "Eltwise"
}

layer {
    bottom: "res4a"
    top: "res4a"
    name: "res4a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4a"
    top: "res4b_branch2a"
    name: "res4b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4b_branch2a"
    top: "res4b_branch2a"
    name: "scale4b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4b_branch2a"
    top: "res4b_branch2a"
    name: "res4b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4b_branch2a"
    top: "res4b_branch2b"
    name: "res4b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4b_branch2b"
    top: "res4b_branch2b"
    name: "scale4b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4b_branch2b"
    top: "res4b_branch2b"
    name: "res4b_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4b_branch2b"
    top: "res4b_branch2c"
    name: "res4b_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4b_branch2c"
    top: "res4b_branch2c"
    name: "scale4b_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4a"
    bottom: "res4b_branch2c"
    top: "res4b"
    name: "res4b"
    type: "Eltwise"
}

layer {
    bottom: "res4b"
    top: "res4b"
    name: "res4b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4b"
    top: "res4c_branch2a"
    name: "res4c_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4c_branch2a"
    top: "res4c_branch2a"
    name: "scale4c_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4c_branch2a"
    top: "res4c_branch2a"
    name: "res4c_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4c_branch2a"
    top: "res4c_branch2b"
    name: "res4c_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4c_branch2b"
    top: "res4c_branch2b"
    name: "scale4c_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4c_branch2b"
    top: "res4c_branch2b"
    name: "res4c_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4c_branch2b"
    top: "res4c_branch2c"
    name: "res4c_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4c_branch2c"
    top: "res4c_branch2c"
    name: "scale4c_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4b"
    bottom: "res4c_branch2c"
    top: "res4c"
    name: "res4c"
    type: "Eltwise"
}

layer {
    bottom: "res4c"
    top: "res4c"
    name: "res4c_relu"
    type: "ReLU"
}

layer {
    bottom: "res4c"
    top: "res4d_branch2a"
    name: "res4d_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4d_branch2a"
    top: "res4d_branch2a"
    name: "scale4d_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4d_branch2a"
    top: "res4d_branch2a"
    name: "res4d_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4d_branch2a"
    top: "res4d_branch2b"
    name: "res4d_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4d_branch2b"
    top: "res4d_branch2b"
    name: "scale4d_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4d_branch2b"
    top: "res4d_branch2b"
    name: "res4d_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4d_branch2b"
    top: "res4d_branch2c"
    name: "res4d_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4d_branch2c"
    top: "res4d_branch2c"
    name: "scale4d_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4c"
    bottom: "res4d_branch2c"
    top: "res4d"
    name: "res4d"
    type: "Eltwise"
}

layer {
    bottom: "res4d"
    top: "res4d"
    name: "res4d_relu"
    type: "ReLU"
}

layer {
    bottom: "res4d"
    top: "res4e_branch2a"
    name: "res4e_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4e_branch2a"
    top: "res4e_branch2a"
    name: "scale4e_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4e_branch2a"
    top: "res4e_branch2a"
    name: "res4e_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4e_branch2a"
    top: "res4e_branch2b"
    name: "res4e_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4e_branch2b"
    top: "res4e_branch2b"
    name: "scale4e_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4e_branch2b"
    top: "res4e_branch2b"
    name: "res4e_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4e_branch2b"
    top: "res4e_branch2c"
    name: "res4e_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4e_branch2c"
    top: "res4e_branch2c"
    name: "scale4e_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4d"
    bottom: "res4e_branch2c"
    top: "res4e"
    name: "res4e"
    type: "Eltwise"
}

layer {
    bottom: "res4e"
    top: "res4e"
    name: "res4e_relu"
    type: "ReLU"
}

layer {
    bottom: "res4e"
    top: "res4f_branch2a"
    name: "res4f_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4f_branch2a"
    top: "res4f_branch2a"
    name: "scale4f_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4f_branch2a"
    top: "res4f_branch2a"
    name: "res4f_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4f_branch2a"
    top: "res4f_branch2b"
    name: "res4f_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4f_branch2b"
    top: "res4f_branch2b"
    name: "scale4f_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4f_branch2b"
    top: "res4f_branch2b"
    name: "res4f_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4f_branch2b"
    top: "res4f_branch2c"
    name: "res4f_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res4f_branch2c"
    top: "res4f_branch2c"
    name: "scale4f_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4e"
    bottom: "res4f_branch2c"
    top: "res4f"
    name: "res4f"
    type: "Eltwise"
}

layer {
    bottom: "res4f"
    top: "res4f"
    name: "res4f_relu"
    type: "ReLU"
}

layer {
    bottom: "res4f"
    top: "res5a_branch1"
    name: "res5a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 2048
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5a_branch1"
    top: "res5a_branch1"
    name: "scale5a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res4f"
    top: "res5a_branch2a"
    name: "res5a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5a_branch2a"
    top: "res5a_branch2a"
    name: "scale5a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    top: "res5a_branch2a"
    bottom: "res5a_branch2a"
    name: "res5a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res5a_branch2a"
    top: "res5a_branch2b"
    name: "res5a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5a_branch2b"
    top: "res5a_branch2b"
    name: "scale5a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    top: "res5a_branch2b"
    bottom: "res5a_branch2b"
    name: "res5a_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res5a_branch2b"
    top: "res5a_branch2c"
    name: "res5a_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 2048
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5a_branch2c"
    top: "res5a_branch2c"
    name: "scale5a_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res5a_branch1"
    bottom: "res5a_branch2c"
    top: "res5a"
    name: "res5a"
    type: "Eltwise"
}

layer {
    bottom: "res5a"
    top: "res5a"
    name: "res5a_relu"
    type: "ReLU"
}

layer {
    bottom: "res5a"
    top: "res5b_branch2a"
    name: "res5b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5b_branch2a"
    top: "res5b_branch2a"
    name: "scale5b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    top: "res5b_branch2a"
    bottom: "res5b_branch2a"
    name: "res5b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res5b_branch2a"
    top: "res5b_branch2b"
    name: "res5b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5b_branch2b"
    top: "res5b_branch2b"
    name: "scale5b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    top: "res5b_branch2b"
    bottom: "res5b_branch2b"
    name: "res5b_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res5b_branch2b"
    top: "res5b_branch2c"
    name: "res5b_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 2048
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5b_branch2c"
    top: "res5b_branch2c"
    name: "scale5b_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res5a"
    bottom: "res5b_branch2c"
    top: "res5b"
    name: "res5b"
    type: "Eltwise"
}

layer {
    bottom: "res5b"
    top: "res5b"
    name: "res5b_relu"
    type: "ReLU"
}

layer {
    bottom: "res5b"
    top: "res5c_branch2a"
    name: "res5c_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5c_branch2a"
    top: "res5c_branch2a"
    name: "scale5c_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    top: "res5c_branch2a"
    bottom: "res5c_branch2a"
    name: "res5c_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res5c_branch2a"
    top: "res5c_branch2b"
    name: "res5c_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5c_branch2b"
    top: "res5c_branch2b"
    name: "scale5c_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    top: "res5c_branch2b"
    bottom: "res5c_branch2b"
    name: "res5c_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res5c_branch2b"
    top: "res5c_branch2c"
    name: "res5c_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 2048
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
    param {
        lr_mult: 1.0
    }
}

layer {
    bottom: "res5c_branch2c"
    top: "res5c_branch2c"
    name: "scale5c_branch2c"
    type: "Scale"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
    param {
        lr_mult: 0.0
        decay_mult: 0.0
    }
}

layer {
    bottom: "res5b"
    bottom: "res5c_branch2c"
    top: "res5c"
    name: "res5c"
    type: "Eltwise"
}

layer {
    bottom: "res5c"
    top: "res5c"
    name: "res5c_relu"
    type: "ReLU"
}


#========================== fpn ===============================
layer {
    name: "res2c_side"
    type: "Convolution"
    bottom: "res2c"
    top: "res2c_side"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

layer {
    name: "res3d_side"
    type: "Convolution"
    bottom: "res3d"
    top: "res3d_side"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

layer {
    name: "res4f_side"
    type: "Convolution"
    bottom: "res4f"
    top: "res4f_side"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

layer {
    name: "res5c_side"
    type: "Convolution"
    bottom: "res5c"
    top: "res5c_side"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

#-------------------up branch-----------------
layer {
  name: "res2c_side_2d"
  type: "Pooling"
  bottom: "res2c_side"
  top: "res2c_side_2d"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}

layer {
    name: "fpn3_pre_up"
    type: "Eltwise"
    bottom: "res2c_side_2d"
    bottom: "res3d_side"
    top: "fpn3_pre_up"
}

layer {
  name: "fpn3_pre_2d_up"
  type: "Pooling"
  bottom: "fpn3_pre_up"
  top: "fpn3_pre_2d_up"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}

layer {
    name: "fpn4_pre_up"
    type: "Eltwise"
    bottom: "fpn3_pre_2d_up"
    bottom: "res4f_side"
    top: "fpn4_pre_up"
}

layer {
  name: "fpn4_pre_2d_up"
  type: "Pooling"
  bottom: "fpn4_pre_up"
  top: "fpn4_pre_2d_up"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}

#-------------------down branch-----------------
layer {
  name: "res5c_side_2x" 
  type: "Deconvolution"
  bottom: "res5c_side" 
  top: "res5c_side_2x"
  convolution_param {
    kernel_size: 4 
    stride: 2
    num_output: 256
    group: 256
    pad: 1
    weight_filler: { type: "bilinear" } 
    bias_term: false
  }
  param { lr_mult: 0 decay_mult: 0 }
}

layer {
    name: "fpn4_pre_down"
    type: "Eltwise"
    bottom: "res4f_side"
    bottom: "res5c_side_2x"
    top: "fpn4_pre_down"
}

layer {
  name: "fpn4_pre_2x_down" 
  type: "Deconvolution"
  bottom: "fpn4_pre_down" 
  top: "fpn4_pre_2x_down"
  convolution_param {
    kernel_size: 4 
    stride: 2
    num_output: 256
    group: 256
    pad: 1
    weight_filler: { type: "bilinear" } 
    bias_term: false
  }
  param { lr_mult: 0 decay_mult: 0 }
}

layer {
    name: "fpn3_pre_down"
    type: "Eltwise"
    bottom: "res3d_side"
    bottom: "fpn4_pre_2x_down"
    top: "fpn3_pre_down"
}

layer {
  name: "fpn3_pre_2x_down" 
  type: "Deconvolution"
  bottom: "fpn3_pre_down" 
  top: "fpn3_pre_2x_down"
  convolution_param {
    kernel_size: 4 
    stride: 2
    num_output: 256
    group: 256
    pad: 1
    weight_filler: { type: "bilinear" } 
    bias_term: false
  }
  param { lr_mult: 0 decay_mult: 0 }
}

#-------------------FPN-----------------
layer {
    name: "fpn2_pre"
    type: "Eltwise"
    bottom: "res2c_side"
    bottom: "fpn3_pre_2x_down"
    top: "fpn2_pre"
}

layer {
    name: "fpn2"
    type: "Convolution"
    bottom: "fpn2_pre"
    top: "fpn2"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

layer {
    name: "fpn3_pre"
    type: "Eltwise"
    bottom: "res3d_side"
    bottom: "res2c_side_2d"
    bottom: "fpn4_pre_2x_down"
    top: "fpn3_pre"
}

layer {
    name: "fpn3"
    type: "Convolution"
    bottom: "fpn3_pre"
    top: "fpn3"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

layer {
    name: "fpn4_pre"
    type: "Eltwise"
    bottom: "res4f_side"
    bottom: "fpn3_pre_2d_up"
    bottom: "res5c_side_2x"
    top: "fpn4_pre"
}

layer {
    name: "fpn4"
    type: "Convolution"
    bottom: "fpn4_pre"
    top: "fpn4"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

layer {
    name: "fpn5_pre"
    type: "Eltwise"
    bottom: "res5c_side"
    bottom: "fpn4_pre_2d_up"
    top: "fpn5_pre"
}

layer {
    name: "fpn5"
    type: "Convolution"
    bottom: "fpn5_pre"
    top: "fpn5"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler { 
            type: "msra"
        }
    }
}

#========================== rpn-fpn2 ===============================
layer {
  name: "rpn_fpn2"
  type: "Convolution"
  bottom: "fpn2"
  top: "rpn_fpn2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_fpn2_relu"
  type: "ReLU"
  bottom: "rpn_fpn2"
  top: "rpn_fpn2"
}
layer {
  name: "rpn_fpn2_cls"
  type: "Convolution"
  bottom: "rpn_fpn2"
  top: "rpn_fpn2_cls"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 6
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn2_cls_reshape"
  bottom: "rpn_fpn2_cls"
  top: "rpn_fpn2_cls_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 2 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn2_bbox"
  type: "Convolution"
  bottom: "rpn_fpn2"
  top: "rpn_fpn2_bbox"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn2_bbox_reshape"
  bottom: "rpn_fpn2_bbox"
  top: "rpn_fpn2_bbox_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 4 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn2_loss"
  type: "DetectionGroupLoss"
  bottom: "rpn_fpn2_cls_reshape"
  bottom: "rpn_fpn2_bbox_reshape"
  bottom: "label_fpn2_reshape"
  top: "rpn_fpn2_loss"
  detection_group_loss_param {
    batch_size: 64
    cls_num: 2
    lambda: 1
    field_w: 44 field_w: 22 field_w: 32
    field_h: 22 field_h: 44 field_h: 32
    stride: 4
    field_whr: 8
    field_xyr: 1
    bg_threshold: 0.3
    bg_multiple: 1
    neg_mining_type: "random"
    objectness: true
    pos_neg_weighted: false
    bbox_loss_type: "Smooth_L1"
  }
  loss_weight: 0.25
}
layer {
  name: "rpn_fpn2_accuracy"
  type: "DetectionGroupAccuracy"
  bottom: "rpn_fpn2_cls_reshape"
  bottom: "rpn_fpn2_bbox_reshape"
  bottom: "label_fpn2_reshape"
  top: "rpn_fpn2_accuracy"
  top: "rpn_fpn2_bboxiou"
  detection_group_accuracy_param {
    cls_num: 2
    field_w: 44 field_w: 22 field_w: 32
    field_h: 22 field_h: 44 field_h: 32
    stride: 4
    field_whr: 8
    field_xyr: 1
    objectness: true
  }
}

#========================== rpn-fpn3 ===============================
layer {
  name: "rpn_fpn3"
  type: "Convolution"
  bottom: "fpn3"
  top: "rpn_fpn3"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_fpn3_relu"
  type: "ReLU"
  bottom: "rpn_fpn3"
  top: "rpn_fpn3"
}
layer {
  name: "rpn_fpn3_cls"
  type: "Convolution"
  bottom: "rpn_fpn3"
  top: "rpn_fpn3_cls"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 6
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn3_cls_reshape"
  bottom: "rpn_fpn3_cls"
  top: "rpn_fpn3_cls_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 2 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn3_bbox"
  type: "Convolution"
  bottom: "rpn_fpn3"
  top: "rpn_fpn3_bbox"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn3_bbox_reshape"
  bottom: "rpn_fpn3_bbox"
  top: "rpn_fpn3_bbox_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 4 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn3_loss"
  type: "DetectionGroupLoss"
  bottom: "rpn_fpn3_cls_reshape"
  bottom: "rpn_fpn3_bbox_reshape"
  bottom: "label_fpn3_reshape"
  top: "rpn_fpn3_loss"
  detection_group_loss_param {
    batch_size: 64
    cls_num: 2
    lambda: 1
    field_w: 88 field_w: 44 field_w: 64
    field_h: 44 field_h: 88 field_h: 64
    stride: 8
    field_whr: 8
    field_xyr: 1
    bg_threshold: 0.3
    bg_multiple: 1
    neg_mining_type: "random"
    objectness: true
    pos_neg_weighted: false
    bbox_loss_type: "Smooth_L1"
  }
  loss_weight: 0.25
}
layer {
  name: "rpn_fpn3_accuracy"
  type: "DetectionGroupAccuracy"
  bottom: "rpn_fpn3_cls_reshape"
  bottom: "rpn_fpn3_bbox_reshape"
  bottom: "label_fpn3_reshape"
  top: "rpn_fpn3_accuracy"
  top: "rpn_fpn3_bboxiou"
  detection_group_accuracy_param {
    cls_num: 2
    field_w: 88 field_w: 44 field_w: 64
    field_h: 44 field_h: 88 field_h: 64
    stride: 8
    field_whr: 8
    field_xyr: 1
    objectness: true
  }
}

#========================== rpn-fpn4 ===============================
layer {
  name: "rpn_fpn4"
  type: "Convolution"
  bottom: "fpn4"
  top: "rpn_fpn4"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_fpn4_relu"
  type: "ReLU"
  bottom: "rpn_fpn4"
  top: "rpn_fpn4"
}
layer {
  name: "rpn_fpn4_cls"
  type: "Convolution"
  bottom: "rpn_fpn4"
  top: "rpn_fpn4_cls"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 6
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn4_cls_reshape"
  bottom: "rpn_fpn4_cls"
  top: "rpn_fpn4_cls_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 2 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn4_bbox"
  type: "Convolution"
  bottom: "rpn_fpn4"
  top: "rpn_fpn4_bbox"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn4_bbox_reshape"
  bottom: "rpn_fpn4_bbox"
  top: "rpn_fpn4_bbox_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 4 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn4_loss"
  type: "DetectionGroupLoss"
  bottom: "rpn_fpn4_cls_reshape"
  bottom: "rpn_fpn4_bbox_reshape"
  bottom: "label_fpn4_reshape"
  top: "rpn_fpn4_loss"
  detection_group_loss_param {
    batch_size: 64
    cls_num: 2
    lambda: 1
    field_w: 176 field_w: 88 field_w: 128
    field_h: 88 field_h: 176 field_h: 128
    stride: 16
    field_whr: 8
    field_xyr: 1
    bg_threshold: 0.3
    bg_multiple: 1
    neg_mining_type: "random"
    objectness: true
    pos_neg_weighted: false
    bbox_loss_type: "Smooth_L1"
  }
  loss_weight: 0.25
}
layer {
  name: "rpn_fpn4_accuracy"
  type: "DetectionGroupAccuracy"
  bottom: "rpn_fpn4_cls_reshape"
  bottom: "rpn_fpn4_bbox_reshape"
  bottom: "label_fpn4_reshape"
  top: "rpn_fpn4_accuracy"
  top: "rpn_fpn4_bboxiou"
  detection_group_accuracy_param {
    cls_num: 2
    field_w: 176 field_w: 88 field_w: 128
    field_h: 88 field_h: 176 field_h: 128
    stride: 16
    field_whr: 8
    field_xyr: 1
    objectness: true
  }
}

#========================== rpn-fpn5 ===============================
layer {
  name: "rpn_fpn5"
  type: "Convolution"
  bottom: "fpn5"
  top: "rpn_fpn5"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_fpn5_relu"
  type: "ReLU"
  bottom: "rpn_fpn5"
  top: "rpn_fpn5"
}
layer {
  name: "rpn_fpn5_cls"
  type: "Convolution"
  bottom: "rpn_fpn5"
  top: "rpn_fpn5_cls"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn5_cls_reshape"
  bottom: "rpn_fpn5_cls"
  top: "rpn_fpn5_cls_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 2 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn5_bbox"
  type: "Convolution"
  bottom: "rpn_fpn5"
  top: "rpn_fpn5_bbox"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "rpn_fpn5_bbox_reshape"
  bottom: "rpn_fpn5_bbox"
  top: "rpn_fpn5_bbox_reshape"
  type: "Reshape"
  reshape_param { 
    shape { dim: -1 dim: 4 dim: 0 dim: 0 } 
  }
}
layer {
  name: "rpn_fpn5_loss"
  type: "DetectionGroupLoss"
  bottom: "rpn_fpn5_cls_reshape"
  bottom: "rpn_fpn5_bbox_reshape"
  bottom: "label_fpn5_reshape"
  top: "rpn_fpn5_loss"
  detection_group_loss_param {
    batch_size: 64
    cls_num: 2
    lambda: 1
    field_w: 352 field_w: 176 field_w: 256 field_w: 704 field_w: 352 field_w: 512
    field_h: 176 field_h: 352 field_h: 256 field_h: 352 field_h: 704 field_h: 512
    stride: 32
    field_whr: 8
    field_xyr: 1
    bg_threshold: 0.3
    bg_multiple: 1
    neg_mining_type: "random"
    objectness: true
    pos_neg_weighted: false
    bbox_loss_type: "Smooth_L1"
  }
  loss_weight: 0.25
}
layer {
  name: "rpn_fpn5_accuracy"
  type: "DetectionGroupAccuracy"
  bottom: "rpn_fpn5_cls_reshape"
  bottom: "rpn_fpn5_bbox_reshape"
  bottom: "label_fpn5_reshape"
  top: "rpn_fpn5_accuracy"
  top: "rpn_fpn5_bboxiou"
  detection_group_accuracy_param {
    cls_num: 2
    field_w: 352 field_w: 176 field_w: 256 field_w: 704 field_w: 352 field_w: 512
    field_h: 176 field_h: 352 field_h: 256 field_h: 352 field_h: 704 field_h: 512
    stride: 32
    field_whr: 8
    field_xyr: 1
    objectness: true
  }
}

#=================== proposal ======================
layer {
  name: "rpn_fpn2_prob_reshape"
  type: "Softmax"
  bottom: "rpn_fpn2_cls_reshape"
  top: "rpn_fpn2_prob_reshape"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "proposals_fpn2"
  type: "BoxGroupOutput"
  bottom: "rpn_fpn2_prob_reshape"
  bottom: "rpn_fpn2_bbox_reshape"
  top: "proposals_fpn2"
  box_group_output_param {
    fg_thr: 0.05
    iou_thr: 0.7
    nms_type: "IOU"
    box_group_param {
      field_w: 44
      field_w: 22
      field_w: 32
      field_h: 22
      field_h: 44
      field_h: 32
      stride: 4
    }
    field_whr: 8
    field_xyr: 1
    max_nms_num: 1500
    min_size: 5
  }
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "rpn_fpn3_prob_reshape"
  type: "Softmax"
  bottom: "rpn_fpn3_cls_reshape"
  top: "rpn_fpn3_prob_reshape"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "proposals_fpn3"
  type: "BoxGroupOutput"
  bottom: "rpn_fpn3_prob_reshape"
  bottom: "rpn_fpn3_bbox_reshape"
  top: "proposals_fpn3"
  box_group_output_param {
    fg_thr: 0.05
    iou_thr: 0.7
    nms_type: "IOU"
    box_group_param {
      field_w: 88
      field_w: 44
      field_w: 64
      field_h: 44
      field_h: 88
      field_h: 64
      stride: 8
    }
    field_whr: 8
    field_xyr: 1
    max_nms_num: 1500
    min_size: 5
  }
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "rpn_fpn4_prob_reshape"
  type: "Softmax"
  bottom: "rpn_fpn4_cls_reshape"
  top: "rpn_fpn4_prob_reshape"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "proposals_fpn4"
  type: "BoxGroupOutput"
  bottom: "rpn_fpn4_prob_reshape"
  bottom: "rpn_fpn4_bbox_reshape"
  top: "proposals_fpn4"
  box_group_output_param {
    fg_thr: 0.05
    iou_thr: 0.7
    nms_type: "IOU"
    box_group_param {
      field_w: 176
      field_w: 88
      field_w: 128
      field_h: 88
      field_h: 176
      field_h: 128
      stride: 16
    }
    field_whr: 8
    field_xyr: 1
    max_nms_num: 1000
  }
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "rpn_fpn5_prob_reshape"
  type: "Softmax"
  bottom: "rpn_fpn5_cls_reshape"
  top: "rpn_fpn5_prob_reshape"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "proposals_fpn5"
  type: "BoxGroupOutput"
  bottom: "rpn_fpn5_prob_reshape"
  bottom: "rpn_fpn5_bbox_reshape"
  top: "proposals_fpn5"
  box_group_output_param {
    fg_thr: 0.00
    iou_thr: 0.7
    nms_type: "IOU"
    box_group_param {
      field_w: 352
      field_w: 176
      field_w: 256
      field_w: 704
      field_w: 352
      field_w: 512
      field_h: 176
      field_h: 352
      field_h: 256
      field_h: 352
      field_h: 704
      field_h: 512
      stride: 32
    }
    field_whr: 8
    field_xyr: 1
    max_nms_num: 1000
  }
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposals"
  type: "Concat"
  bottom: "proposals_fpn2"
  bottom: "proposals_fpn3"
  bottom: "proposals_fpn4"
  bottom: "proposals_fpn5"
  top: "proposals"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposal_info_pre"
  type: "ProposalTarget"
  bottom: "proposals"
  bottom: "gt_boxes"
  top: "rois_pre"
  top: "proposal_labels_pre"
  top: "proposal_targets_pre"
  top: "box_inside_weights_pre"
  top: "box_outside_weights_pre"
  top: "match_gt_boxes_pre"
  include {
    phase: TRAIN
  }
  proposal_target_param {
    cls_num: 81
    batch_size: 512
    fg_fraction: 0.25
    num_img_per_batch: 1
    fg_thr: 0.5
    bg_thr_hg: 0.5
    bg_thr_lw: 0.0
    img_width: 800
    img_height: 800
  }
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.1 bbox_std: 0.1 bbox_std: 0.2 bbox_std: 0.2
  }
  propagate_down: 0
  propagate_down: 0
}


#=================== scale-aware RCNN ======================
layer {
  name: "proposal_info_fpn2"
  type: "ScaleRoute"
  bottom: "rois_pre"
  bottom: "proposal_labels_pre"
  bottom: "proposal_targets_pre"
  bottom: "box_inside_weights_pre"
  bottom: "box_outside_weights_pre"
  bottom: "match_gt_boxes_pre"
  top: "rois_fpn2"
  top: "proposal_labels_fpn2"
  top: "proposal_targets_fpn2"
  top: "box_inside_weights_fpn2"
  top: "box_outside_weights_fpn2"
  top: "match_gt_boxes_fpn2"
  scale_route_param {
    high_scale: 112
  }
}
layer {
  name: "roi_grid_fpn2"
  type: "ROIAlign"
  bottom: "fpn2"
  bottom: "rois_fpn2"
  top: "roi_grid_fpn2"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.25 # 1/4
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn2"
  type: "Pooling"
  bottom: "roi_grid_fpn2"
  top: "roi_pool_fpn2"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn3"
  type: "ScaleRoute"
  bottom: "rois_pre"
  bottom: "proposal_labels_pre"
  bottom: "proposal_targets_pre"
  bottom: "box_inside_weights_pre"
  bottom: "box_outside_weights_pre"
  bottom: "match_gt_boxes_pre"
  top: "rois_fpn3"
  top: "proposal_labels_fpn3"
  top: "proposal_targets_fpn3"
  top: "box_inside_weights_fpn3"
  top: "box_outside_weights_fpn3"
  top: "match_gt_boxes_fpn3"
  scale_route_param {
    low_scale: 112
    high_scale: 224
  }
}
layer {
  name: "roi_grid_fpn3"
  type: "ROIAlign"
  bottom: "fpn3"
  bottom: "rois_fpn3"
  top: "roi_grid_fpn3"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.125 # 1/8
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn3"
  type: "Pooling"
  bottom: "roi_grid_fpn3"
  top: "roi_pool_fpn3"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn4"
  type: "ScaleRoute"
  bottom: "rois_pre"
  bottom: "proposal_labels_pre"
  bottom: "proposal_targets_pre"
  bottom: "box_inside_weights_pre"
  bottom: "box_outside_weights_pre"
  bottom: "match_gt_boxes_pre"
  top: "rois_fpn4"
  top: "proposal_labels_fpn4"
  top: "proposal_targets_fpn4"
  top: "box_inside_weights_fpn4"
  top: "box_outside_weights_fpn4"
  top: "match_gt_boxes_fpn4"
  scale_route_param {
    low_scale: 224
    high_scale: 448
  }
}
layer {
  name: "roi_grid_fpn4"
  type: "ROIAlign"
  bottom: "fpn4"
  bottom: "rois_fpn4"
  top: "roi_grid_fpn4"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn4"
  type: "Pooling"
  bottom: "roi_grid_fpn4"
  top: "roi_pool_fpn4"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn5"
  type: "ScaleRoute"
  bottom: "rois_pre"
  bottom: "proposal_labels_pre"
  bottom: "proposal_targets_pre"
  bottom: "box_inside_weights_pre"
  bottom: "box_outside_weights_pre"
  bottom: "match_gt_boxes_pre"
  top: "rois_fpn5"
  top: "proposal_labels_fpn5"
  top: "proposal_targets_fpn5"
  top: "box_inside_weights_fpn5"
  top: "box_outside_weights_fpn5"
  top: "match_gt_boxes_fpn5"
  scale_route_param {
    low_scale: 448
  }
}
layer {
  name: "roi_grid_fpn5"
  type: "ROIAlign"
  bottom: "fpn5"
  bottom: "rois_fpn5"
  top: "roi_grid_fpn5"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.03125 # 1/32
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn5"
  type: "Pooling"
  bottom: "roi_grid_fpn5"
  top: "roi_pool_fpn5"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "roi_pool"
  type: "Concat"
  bottom: "roi_pool_fpn2"
  bottom: "roi_pool_fpn3"
  bottom: "roi_pool_fpn4"
  bottom: "roi_pool_fpn5"
  top: "roi_pool"
  concat_param {
    axis: 0
  }
}
layer {
  name: "rois"
  type: "Concat"
  bottom: "rois_fpn2"
  bottom: "rois_fpn3"
  bottom: "rois_fpn4"
  bottom: "rois_fpn5"
  top: "rois"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposal_labels"
  type: "Concat"
  bottom: "proposal_labels_fpn2"
  bottom: "proposal_labels_fpn3"
  bottom: "proposal_labels_fpn4"
  bottom: "proposal_labels_fpn5"
  top: "proposal_labels"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposal_targets"
  type: "Concat"
  bottom: "proposal_targets_fpn2"
  bottom: "proposal_targets_fpn3"
  bottom: "proposal_targets_fpn4"
  bottom: "proposal_targets_fpn5"
  top: "proposal_targets"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "box_inside_weights"
  type: "Concat"
  bottom: "box_inside_weights_fpn2"
  bottom: "box_inside_weights_fpn3"
  bottom: "box_inside_weights_fpn4"
  bottom: "box_inside_weights_fpn5"
  top: "box_inside_weights"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "box_outside_weights"
  type: "Concat"
  bottom: "box_outside_weights_fpn2"
  bottom: "box_outside_weights_fpn3"
  bottom: "box_outside_weights_fpn4"
  bottom: "box_outside_weights_fpn5"
  top: "box_outside_weights"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "match_gt_boxes"
  type: "Concat"
  bottom: "match_gt_boxes_fpn2"
  bottom: "match_gt_boxes_fpn3"
  bottom: "match_gt_boxes_fpn4"
  bottom: "match_gt_boxes_fpn5"
  top: "match_gt_boxes"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}


#=================== head network ======================
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "roi_pool"
  top: "fc1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc1_relu"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc2_relu"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "cls_pred"
  type: "InnerProduct"
  bottom: "fc2"
  top: "cls_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 81
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc2"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cls_pred"
  bottom: "proposal_labels"
  top: "loss_cls"
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  loss_weight: 1
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "cls_accuracy"
  type: "Accuracy"
  bottom: "cls_pred"
  bottom: "proposal_labels"
  top: "cls_accuracy"
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "proposal_targets"
  bottom: "box_inside_weights"
  bottom: "box_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "bbox_iou"
  type: "BboxAccuracy"
  bottom: "bbox_pred"
  bottom: "rois"
  bottom: "match_gt_boxes"
  top: "bbox_iou"
  top: "bbox_iou_pre"
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.1 bbox_std: 0.1 bbox_std: 0.2 bbox_std: 0.2
  }
}

#=================== second stage ======================
layer {
  name: "proposals_2nd"
  type: "DecodeBBox"
  bottom: "bbox_pred"
  bottom: "rois"
  bottom: "match_gt_boxes"
  top: "proposals_2nd"
  bbox_reg_param {
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.1 bbox_std: 0.1 bbox_std: 0.2 bbox_std: 0.2
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}

layer {
  name: "proposal_info_pre_2nd"
  type: "ProposalTarget"
  bottom: "proposals_2nd"
  bottom: "gt_boxes"
  top: "rois_pre_2nd"
  top: "proposal_labels_pre_2nd"
  top: "proposal_targets_pre_2nd"
  top: "box_inside_weights_pre_2nd"
  top: "box_outside_weights_pre_2nd"
  top: "match_gt_boxes_pre_2nd"
  include {
    phase: TRAIN
  }
  proposal_target_param {
    cls_num: 81
    batch_size: -1
    fg_fraction: 0.25
    num_img_per_batch: 1
    fg_thr: 0.6
    bg_thr_hg: 0.6
    bg_thr_lw: 0.0
    img_width: 800
    img_height: 800
  }
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.05 bbox_std: 0.05 bbox_std: 0.1 bbox_std: 0.1
  }
  propagate_down: 0
  propagate_down: 0
}

#=================== scale-aware RCNN ======================
layer {
  name: "proposal_info_fpn2_2nd"
  type: "ScaleRoute"
  bottom: "rois_pre_2nd"
  bottom: "proposal_labels_pre_2nd"
  bottom: "proposal_targets_pre_2nd"
  bottom: "box_inside_weights_pre_2nd"
  bottom: "box_outside_weights_pre_2nd"
  bottom: "match_gt_boxes_pre_2nd"
  top: "rois_fpn2_2nd"
  top: "proposal_labels_fpn2_2nd"
  top: "proposal_targets_fpn2_2nd"
  top: "box_inside_weights_fpn2_2nd"
  top: "box_outside_weights_fpn2_2nd"
  top: "match_gt_boxes_fpn2_2nd"
  scale_route_param {
    high_scale: 112
  }
}
layer {
  name: "roi_grid_fpn2_2nd"
  type: "ROIAlign"
  bottom: "fpn2"
  bottom: "rois_fpn2_2nd"
  top: "roi_grid_fpn2_2nd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.25 # 1/4
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn2_2nd"
  type: "Pooling"
  bottom: "roi_grid_fpn2_2nd"
  top: "roi_pool_fpn2_2nd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn3_2nd"
  type: "ScaleRoute"
  bottom: "rois_pre_2nd"
  bottom: "proposal_labels_pre_2nd"
  bottom: "proposal_targets_pre_2nd"
  bottom: "box_inside_weights_pre_2nd"
  bottom: "box_outside_weights_pre_2nd"
  bottom: "match_gt_boxes_pre_2nd"
  top: "rois_fpn3_2nd"
  top: "proposal_labels_fpn3_2nd"
  top: "proposal_targets_fpn3_2nd"
  top: "box_inside_weights_fpn3_2nd"
  top: "box_outside_weights_fpn3_2nd"
  top: "match_gt_boxes_fpn3_2nd"
  scale_route_param {
    low_scale: 112
    high_scale: 224
  }
}
layer {
  name: "roi_grid_fpn3_2nd"
  type: "ROIAlign"
  bottom: "fpn3"
  bottom: "rois_fpn3_2nd"
  top: "roi_grid_fpn3_2nd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.125 # 1/8
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn3_2nd"
  type: "Pooling"
  bottom: "roi_grid_fpn3_2nd"
  top: "roi_pool_fpn3_2nd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn4_2nd"
  type: "ScaleRoute"
  bottom: "rois_pre_2nd"
  bottom: "proposal_labels_pre_2nd"
  bottom: "proposal_targets_pre_2nd"
  bottom: "box_inside_weights_pre_2nd"
  bottom: "box_outside_weights_pre_2nd"
  bottom: "match_gt_boxes_pre_2nd"
  top: "rois_fpn4_2nd"
  top: "proposal_labels_fpn4_2nd"
  top: "proposal_targets_fpn4_2nd"
  top: "box_inside_weights_fpn4_2nd"
  top: "box_outside_weights_fpn4_2nd"
  top: "match_gt_boxes_fpn4_2nd"
  scale_route_param {
    low_scale: 224
    high_scale: 448
  }
}
layer {
  name: "roi_grid_fpn4_2nd"
  type: "ROIAlign"
  bottom: "fpn4"
  bottom: "rois_fpn4_2nd"
  top: "roi_grid_fpn4_2nd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn4_2nd"
  type: "Pooling"
  bottom: "roi_grid_fpn4_2nd"
  top: "roi_pool_fpn4_2nd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn5_2nd"
  type: "ScaleRoute"
  bottom: "rois_pre_2nd"
  bottom: "proposal_labels_pre_2nd"
  bottom: "proposal_targets_pre_2nd"
  bottom: "box_inside_weights_pre_2nd"
  bottom: "box_outside_weights_pre_2nd"
  bottom: "match_gt_boxes_pre_2nd"
  top: "rois_fpn5_2nd"
  top: "proposal_labels_fpn5_2nd"
  top: "proposal_targets_fpn5_2nd"
  top: "box_inside_weights_fpn5_2nd"
  top: "box_outside_weights_fpn5_2nd"
  top: "match_gt_boxes_fpn5_2nd"
  scale_route_param {
    low_scale: 448
  }
}
layer {
  name: "roi_grid_fpn5_2nd"
  type: "ROIAlign"
  bottom: "fpn5"
  bottom: "rois_fpn5_2nd"
  top: "roi_grid_fpn5_2nd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.03125 # 1/32
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn5_2nd"
  type: "Pooling"
  bottom: "roi_grid_fpn5_2nd"
  top: "roi_pool_fpn5_2nd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "roi_pool_2nd"
  type: "Concat"
  bottom: "roi_pool_fpn2_2nd"
  bottom: "roi_pool_fpn3_2nd"
  bottom: "roi_pool_fpn4_2nd"
  bottom: "roi_pool_fpn5_2nd"
  top: "roi_pool_2nd"
  concat_param {
    axis: 0
  }
}
layer {
  name: "rois_2nd"
  type: "Concat"
  bottom: "rois_fpn2_2nd"
  bottom: "rois_fpn3_2nd"
  bottom: "rois_fpn4_2nd"
  bottom: "rois_fpn5_2nd"
  top: "rois_2nd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposal_labels_2nd"
  type: "Concat"
  bottom: "proposal_labels_fpn2_2nd"
  bottom: "proposal_labels_fpn3_2nd"
  bottom: "proposal_labels_fpn4_2nd"
  bottom: "proposal_labels_fpn5_2nd"
  top: "proposal_labels_2nd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposal_targets_2nd"
  type: "Concat"
  bottom: "proposal_targets_fpn2_2nd"
  bottom: "proposal_targets_fpn3_2nd"
  bottom: "proposal_targets_fpn4_2nd"
  bottom: "proposal_targets_fpn5_2nd"
  top: "proposal_targets_2nd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "box_inside_weights_2nd"
  type: "Concat"
  bottom: "box_inside_weights_fpn2_2nd"
  bottom: "box_inside_weights_fpn3_2nd"
  bottom: "box_inside_weights_fpn4_2nd"
  bottom: "box_inside_weights_fpn5_2nd"
  top: "box_inside_weights_2nd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "box_outside_weights_2nd"
  type: "Concat"
  bottom: "box_outside_weights_fpn2_2nd"
  bottom: "box_outside_weights_fpn3_2nd"
  bottom: "box_outside_weights_fpn4_2nd"
  bottom: "box_outside_weights_fpn5_2nd"
  top: "box_outside_weights_2nd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "match_gt_boxes_2nd"
  type: "Concat"
  bottom: "match_gt_boxes_fpn2_2nd"
  bottom: "match_gt_boxes_fpn3_2nd"
  bottom: "match_gt_boxes_fpn4_2nd"
  bottom: "match_gt_boxes_fpn5_2nd"
  top: "match_gt_boxes_2nd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}


#=================== head network ======================
layer {
  name: "fc1_2nd"
  type: "InnerProduct"
  bottom: "roi_pool_2nd"
  top: "fc1_2nd"
  param {
    lr_mult: 2
    decay_mult: 1
  }
  param {
    lr_mult: 4
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc1_relu_2nd"
  type: "ReLU"
  bottom: "fc1_2nd"
  top: "fc1_2nd"
}
layer {
  name: "fc2_2nd"
  type: "InnerProduct"
  bottom: "fc1_2nd"
  top: "fc2_2nd"
  param {
    lr_mult: 2
    decay_mult: 1
  }
  param {
    lr_mult: 4
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc2_relu_2nd"
  type: "ReLU"
  bottom: "fc2_2nd"
  top: "fc2_2nd"
}
layer {
  name: "cls_pred_2nd"
  type: "InnerProduct"
  bottom: "fc2_2nd"
  top: "cls_pred_2nd"
  param {
    lr_mult: 2
  }
  param {
    lr_mult: 4
  }
  inner_product_param {
    num_output: 81
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred_2nd"
  type: "InnerProduct"
  bottom: "fc2_2nd"
  top: "bbox_pred_2nd"
  param {
    lr_mult: 2
  }
  param {
    lr_mult: 4
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cls_pred_2nd"
  bottom: "proposal_labels_2nd"
  top: "loss_cls_2nd"
  name: "loss_cls_2nd"
  type: "SoftmaxWithLoss"
  loss_weight: 0.5
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "cls_accuracy_2nd"
  type: "Accuracy"
  bottom: "cls_pred_2nd"
  bottom: "proposal_labels_2nd"
  top: "cls_accuracy_2nd"
}
layer {
  name: "loss_bbox_2nd"
  type: "SmoothL1Loss"
  bottom: "bbox_pred_2nd"
  bottom: "proposal_targets_2nd"
  bottom: "box_inside_weights_2nd"
  bottom: "box_outside_weights_2nd"
  top: "loss_bbox_2nd"
  loss_weight: 0.5
  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "bbox_iou_2nd"
  type: "BboxAccuracy"
  bottom: "bbox_pred_2nd"
  bottom: "rois_2nd"
  bottom: "match_gt_boxes_2nd"
  top: "bbox_iou_2nd"
  top: "bbox_iou_pre_2nd"
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.05 bbox_std: 0.05 bbox_std: 0.1 bbox_std: 0.1
  }
}

#=================== third stage ======================
layer {
  name: "proposals_3rd"
  type: "DecodeBBox"
  bottom: "bbox_pred_2nd"
  bottom: "rois_2nd"
  bottom: "match_gt_boxes_2nd"
  top: "proposals_3rd"
  bbox_reg_param {
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.05 bbox_std: 0.05 bbox_std: 0.1 bbox_std: 0.1
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}

layer {
  name: "proposal_info_pre_3rd"
  type: "ProposalTarget"
  bottom: "proposals_3rd"
  bottom: "gt_boxes"
  top: "rois_pre_3rd"
  top: "proposal_labels_pre_3rd"
  top: "proposal_targets_pre_3rd"
  top: "box_inside_weights_pre_3rd"
  top: "box_outside_weights_pre_3rd"
  top: "match_gt_boxes_pre_3rd"
  include {
    phase: TRAIN
  }
  proposal_target_param {
    cls_num: 81
    batch_size: -1
    fg_fraction: 0.25
    num_img_per_batch: 1
    fg_thr: 0.7
    bg_thr_hg: 0.7
    bg_thr_lw: 0.0
    img_width: 800
    img_height: 800
  }
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.033 bbox_std: 0.033 bbox_std: 0.067 bbox_std: 0.067
  }
  propagate_down: 0
  propagate_down: 0
}

#=================== scale-aware RCNN ======================
layer {
  name: "proposal_info_fpn2_3rd"
  type: "ScaleRoute"
  bottom: "rois_pre_3rd"
  bottom: "proposal_labels_pre_3rd"
  bottom: "proposal_targets_pre_3rd"
  bottom: "box_inside_weights_pre_3rd"
  bottom: "box_outside_weights_pre_3rd"
  bottom: "match_gt_boxes_pre_3rd"
  top: "rois_fpn2_3rd"
  top: "proposal_labels_fpn2_3rd"
  top: "proposal_targets_fpn2_3rd"
  top: "box_inside_weights_fpn2_3rd"
  top: "box_outside_weights_fpn2_3rd"
  top: "match_gt_boxes_fpn2_3rd"
  scale_route_param {
    high_scale: 112
  }
}
layer {
  name: "roi_grid_fpn2_3rd"
  type: "ROIAlign"
  bottom: "fpn2"
  bottom: "rois_fpn2_3rd"
  top: "roi_grid_fpn2_3rd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.25 # 1/4
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn2_3rd"
  type: "Pooling"
  bottom: "roi_grid_fpn2_3rd"
  top: "roi_pool_fpn2_3rd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn3_3rd"
  type: "ScaleRoute"
  bottom: "rois_pre_3rd"
  bottom: "proposal_labels_pre_3rd"
  bottom: "proposal_targets_pre_3rd"
  bottom: "box_inside_weights_pre_3rd"
  bottom: "box_outside_weights_pre_3rd"
  bottom: "match_gt_boxes_pre_3rd"
  top: "rois_fpn3_3rd"
  top: "proposal_labels_fpn3_3rd"
  top: "proposal_targets_fpn3_3rd"
  top: "box_inside_weights_fpn3_3rd"
  top: "box_outside_weights_fpn3_3rd"
  top: "match_gt_boxes_fpn3_3rd"
  scale_route_param {
    low_scale: 112
    high_scale: 224
  }
}
layer {
  name: "roi_grid_fpn3_3rd"
  type: "ROIAlign"
  bottom: "fpn3"
  bottom: "rois_fpn3_3rd"
  top: "roi_grid_fpn3_3rd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.125 # 1/8
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn3_3rd"
  type: "Pooling"
  bottom: "roi_grid_fpn3_3rd"
  top: "roi_pool_fpn3_3rd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn4_3rd"
  type: "ScaleRoute"
  bottom: "rois_pre_3rd"
  bottom: "proposal_labels_pre_3rd"
  bottom: "proposal_targets_pre_3rd"
  bottom: "box_inside_weights_pre_3rd"
  bottom: "box_outside_weights_pre_3rd"
  bottom: "match_gt_boxes_pre_3rd"
  top: "rois_fpn4_3rd"
  top: "proposal_labels_fpn4_3rd"
  top: "proposal_targets_fpn4_3rd"
  top: "box_inside_weights_fpn4_3rd"
  top: "box_outside_weights_fpn4_3rd"
  top: "match_gt_boxes_fpn4_3rd"
  scale_route_param {
    low_scale: 224
    high_scale: 448
  }
}
layer {
  name: "roi_grid_fpn4_3rd"
  type: "ROIAlign"
  bottom: "fpn4"
  bottom: "rois_fpn4_3rd"
  top: "roi_grid_fpn4_3rd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn4_3rd"
  type: "Pooling"
  bottom: "roi_grid_fpn4_3rd"
  top: "roi_pool_fpn4_3rd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "proposal_info_fpn5_3rd"
  type: "ScaleRoute"
  bottom: "rois_pre_3rd"
  bottom: "proposal_labels_pre_3rd"
  bottom: "proposal_targets_pre_3rd"
  bottom: "box_inside_weights_pre_3rd"
  bottom: "box_outside_weights_pre_3rd"
  bottom: "match_gt_boxes_pre_3rd"
  top: "rois_fpn5_3rd"
  top: "proposal_labels_fpn5_3rd"
  top: "proposal_targets_fpn5_3rd"
  top: "box_inside_weights_fpn5_3rd"
  top: "box_outside_weights_fpn5_3rd"
  top: "match_gt_boxes_fpn5_3rd"
  scale_route_param {
    low_scale: 448
  }
}
layer {
  name: "roi_grid_fpn5_3rd"
  type: "ROIAlign"
  bottom: "fpn5"
  bottom: "rois_fpn5_3rd"
  top: "roi_grid_fpn5_3rd"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.03125 # 1/32
  }
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "roi_pool_fpn5_3rd"
  type: "Pooling"
  bottom: "roi_grid_fpn5_3rd"
  top: "roi_pool_fpn5_3rd"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "roi_pool_3rd"
  type: "Concat"
  bottom: "roi_pool_fpn2_3rd"
  bottom: "roi_pool_fpn3_3rd"
  bottom: "roi_pool_fpn4_3rd"
  bottom: "roi_pool_fpn5_3rd"
  top: "roi_pool_3rd"
  concat_param {
    axis: 0
  }
}
layer {
  name: "rois_3rd"
  type: "Concat"
  bottom: "rois_fpn2_3rd"
  bottom: "rois_fpn3_3rd"
  bottom: "rois_fpn4_3rd"
  bottom: "rois_fpn5_3rd"
  top: "rois_3rd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposal_labels_3rd"
  type: "Concat"
  bottom: "proposal_labels_fpn2_3rd"
  bottom: "proposal_labels_fpn3_3rd"
  bottom: "proposal_labels_fpn4_3rd"
  bottom: "proposal_labels_fpn5_3rd"
  top: "proposal_labels_3rd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "proposal_targets_3rd"
  type: "Concat"
  bottom: "proposal_targets_fpn2_3rd"
  bottom: "proposal_targets_fpn3_3rd"
  bottom: "proposal_targets_fpn4_3rd"
  bottom: "proposal_targets_fpn5_3rd"
  top: "proposal_targets_3rd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "box_inside_weights_3rd"
  type: "Concat"
  bottom: "box_inside_weights_fpn2_3rd"
  bottom: "box_inside_weights_fpn3_3rd"
  bottom: "box_inside_weights_fpn4_3rd"
  bottom: "box_inside_weights_fpn5_3rd"
  top: "box_inside_weights_3rd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "box_outside_weights_3rd"
  type: "Concat"
  bottom: "box_outside_weights_fpn2_3rd"
  bottom: "box_outside_weights_fpn3_3rd"
  bottom: "box_outside_weights_fpn4_3rd"
  bottom: "box_outside_weights_fpn5_3rd"
  top: "box_outside_weights_3rd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "match_gt_boxes_3rd"
  type: "Concat"
  bottom: "match_gt_boxes_fpn2_3rd"
  bottom: "match_gt_boxes_fpn3_3rd"
  bottom: "match_gt_boxes_fpn4_3rd"
  bottom: "match_gt_boxes_fpn5_3rd"
  top: "match_gt_boxes_3rd"
  concat_param {
    axis: 0
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}


#=================== head network ======================
layer {
  name: "fc1_3rd"
  type: "InnerProduct"
  bottom: "roi_pool_3rd"
  top: "fc1_3rd"
  param {
    lr_mult: 4
    decay_mult: 1
  }
  param {
    lr_mult: 8
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc1_relu_3rd"
  type: "ReLU"
  bottom: "fc1_3rd"
  top: "fc1_3rd"
}
layer {
  name: "fc2_3rd"
  type: "InnerProduct"
  bottom: "fc1_3rd"
  top: "fc2_3rd"
  param {
    lr_mult: 4
    decay_mult: 1
  }
  param {
    lr_mult: 8
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc2_relu_3rd"
  type: "ReLU"
  bottom: "fc2_3rd"
  top: "fc2_3rd"
}
layer {
  name: "cls_pred_3rd"
  type: "InnerProduct"
  bottom: "fc2_3rd"
  top: "cls_pred_3rd"
  param {
    lr_mult: 4
  }
  param {
    lr_mult: 8
  }
  inner_product_param {
    num_output: 81
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred_3rd"
  type: "InnerProduct"
  bottom: "fc2_3rd"
  top: "bbox_pred_3rd"
  param {
    lr_mult: 4
  }
  param {
    lr_mult: 8
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cls_pred_3rd"
  bottom: "proposal_labels_3rd"
  top: "loss_cls_3rd"
  name: "loss_cls_3rd"
  type: "SoftmaxWithLoss"
  loss_weight: 0.25
  propagate_down: 1
  propagate_down: 0
}
layer {
  name: "cls_accuracy_3rd"
  type: "Accuracy"
  bottom: "cls_pred_3rd"
  bottom: "proposal_labels_3rd"
  top: "cls_accuracy_3rd"
}
layer {
  name: "loss_bbox_3rd"
  type: "SmoothL1Loss"
  bottom: "bbox_pred_3rd"
  bottom: "proposal_targets_3rd"
  bottom: "box_inside_weights_3rd"
  bottom: "box_outside_weights_3rd"
  top: "loss_bbox_3rd"
  loss_weight: 0.25
  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}
layer {
  name: "bbox_iou_3rd"
  type: "BboxAccuracy"
  bottom: "bbox_pred_3rd"
  bottom: "rois_3rd"
  bottom: "match_gt_boxes_3rd"
  top: "bbox_iou_3rd"
  top: "bbox_iou_pre_3rd"
  bbox_reg_param {
    cls_aware: false
    bbox_mean: 0 bbox_mean: 0 bbox_mean: 0 bbox_mean: 0
    bbox_std: 0.033 bbox_std: 0.033 bbox_std: 0.067 bbox_std: 0.067
  }
}
